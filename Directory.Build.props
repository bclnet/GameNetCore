<Project>
  <Import Project="version.props" />

  <PropertyGroup>
    <Product>Microsoft ASP.NET Core</Product>

    <Authors>Microsoft</Authors>
    <Company>Microsoft Corporation.</Company>
    <Copyright>© Microsoft Corporation. All rights reserved.</Copyright>
    <NeutralLanguage>en-US</NeutralLanguage>

    <!-- Package settings -->

    <PackageLicenseUrl>https://raw.githubusercontent.com/aspnet/AspNetCore/2.0.0/LICENSE.txt</PackageLicenseUrl>
    <!-- The SPDX name for the source license. See https://spdx.org/licenses/. -->
    <PackageLicenseType>Apache-2.0</PackageLicenseType>

    <!-- Contact email address for NuGet packages and Linux installers. -->
    <MaintainerEmail>nugetaspnet@microsoft.com</MaintainerEmail>

    <PackageIconUrl>https://go.microsoft.com/fwlink/?LinkID=288859</PackageIconUrl>
    <PackageProjectUrl>https://asp.net</PackageProjectUrl>
    <PackageRequireLicenseAcceptance>true</PackageRequireLicenseAcceptance>
    <Serviceable>true</Serviceable>

    <IncludeSource>false</IncludeSource>
    <IncludeSymbols>true</IncludeSymbols>

    <DefaultNetCoreTargetFramework>netcoreapp$(AspNetCoreMajorVersion).$(AspNetCoreMinorVersion)</DefaultNetCoreTargetFramework>

    <SharedFxProductName>$(Product) $(PackageVersion) Shared Framework</SharedFxProductName>
    <SharedFxDescription>Shared Framework for hosting of Microsoft ASP.NET Core applications. It is open source, cross-platform and is supported by Microsoft. We hope you enjoy using it! If you do, please consider joining the active community of developers that are contributing to the project on GitHub ($(RepositoryUrl)). We happily accept issues and PRs.</SharedFxDescription>

    <RuntimeInstallerBaseName>aspnetcore-runtime</RuntimeInstallerBaseName>
    <TargetingPackInstallerBaseName>aspnetcore-targeting-pack</TargetingPackInstallerBaseName>
    <!--
      Archives and installers using this prefix are intended for internal-use only.
      For example, this .zip is used to handoff bits to partner teams who then incorporate our shared frameworks
      into their own installers.
    -->
    <InternalInstallerBaseName>$(RuntimeInstallerBaseName)-internal</InternalInstallerBaseName>
  </PropertyGroup>

  <!-- Warnings and errors -->
  <PropertyGroup>
    <TreatWarningsAsErrors>true</TreatWarningsAsErrors>
    <!--
      Suppress NuGet warning about upcoming deprecation of PackageLicenseUrl. When embedding licenses are supported,
      replace PackageLicenseUrl with PackageLicenseExpression.
    -->
    <NoWarn>$(NoWarn);NU5125</NoWarn>
    <!-- Suppress NuGet warnings about using SemVer 2.0. -->
    <NoWarn>$(NoWarn);NU5105</NoWarn>
    <!-- Don't make missing XML docs a fatal build error, but still surface so we have visibility into undocumented APIs. -->
    <WarningsNotAsErrors>$(WarningsNotAsErrors);CS1591</WarningsNotAsErrors>
    <!-- xUnit1004 = warns about skipped tests. Make this a non-fatal build warning. -->
    <WarningsNotAsErrors>$(WarningsNotAsErrors);xUnit1004</WarningsNotAsErrors>
  </PropertyGroup>

  <!-- Source code settings -->
  <PropertyGroup>
    <RepositoryRoot>$(MSBuildThisFileDirectory)</RepositoryRoot>
    <RepositoryUrl>https://github.com/aspnet/AspNetCore</RepositoryUrl>
    <RepositoryType>git</RepositoryType>
    <SharedSourceRoot>$(MSBuildThisFileDirectory)src\Shared\</SharedSourceRoot>
    <GoogleTestSubmoduleRoot>$(RepositoryRoot)src\submodules\googletest\</GoogleTestSubmoduleRoot>
    <!-- Embed source files that are not tracked by the source control manager in the PDB. -->
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <!-- Additional assembly attributes are already configured to include the source revision ID. -->
    <IncludeSourceRevisionInInformationalVersion>false</IncludeSourceRevisionInInformationalVersion>

    <!-- These project types are disabled because the presence of a PackageReference causes issues for NuGet. -->
    <DisableSourceLink Condition="'$(MSBuildProjectExtension)' == '.debproj' OR '$(MSBuildProjectExtension)' == '.rpmproj'">true</DisableSourceLink>
  </PropertyGroup>

  <ItemGroup Condition="'$(DisableSourceLink)' != 'true'">
    <!-- See https://github.com/dotnet/sourcelink -->
    <PackageReference Include="Microsoft.SourceLink.GitHub" Version="$(MicrosoftSourceLinkGitHubPackageVersion)" PrivateAssets="All" AllowExplicitReference="true" />
    <PackageReference Include="Microsoft.SourceLink.Vsts.Git" Version="$(MicrosoftSourceLinkVstsGitPackageVersion)" PrivateAssets="All" AllowExplicitReference="true" />
  </ItemGroup>

  <!-- Compilation options which apply to all languages. Language-specific options should be set in eng/targets/$(lang).Common.props -->
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <PlatformName Condition=" '$(PlatformName)' == '' ">$(Platform)</PlatformName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Windows'))">win</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('OSX'))">osx</TargetOsName>
    <TargetOsName Condition=" '$(TargetOsName)' == '' AND $([MSBuild]::IsOSPlatform('Linux'))">linux</TargetOsName>
    <TargetArchitecture Condition="'$(TargetArchitecture)' == ''">x64</TargetArchitecture>
    <TargetRuntimeIdentifier>$(TargetOsName)-$(TargetArchitecture)</TargetRuntimeIdentifier>

    <!-- This defines the list of RIDs supported by the ASP.NET Core shared framework. -->
    <SupportedRuntimeIdentifiers>
      win-x64;
      win-x86;
      win-arm;
      osx-x64;
      linux-musl-x64;
      linux-x64;
      linux-arm;
      linux-arm64
    </SupportedRuntimeIdentifiers>

    <!-- Make error messages clickable in VS Code's console -->
    <GenerateFullPaths Condition="'$(VSCODE_CWD)' != '' OR '$(TERM_PROGRAM)' == 'vscode'">true</GenerateFullPaths>

    <!-- Suppress the message about using a preview version of .NET Core SDK. We are okay with this and don't need the warning. -->
    <SuppressNETCoreSdkPreviewMessage>true</SuppressNETCoreSdkPreviewMessage>

    <!-- Fixes a common error in targets implementing a NoBuild mode. -->
    <BuildProjectReferences Condition=" '$(NoBuild)' == 'true' ">false</BuildProjectReferences>

    <IsReferenceAssemblyProject>false</IsReferenceAssemblyProject>
    <IsReferenceAssemblyProject Condition="$(MSBuildProjectDirectory.EndsWith('ref'))">true</IsReferenceAssemblyProject>
    <OutDirName Condition="'$(IsReferenceAssemblyProject)' == 'true'">$(MSBuildProjectName)-ref</OutDirName>
  </PropertyGroup>

  <Import Project="eng\Versions.props" />
  <Import Project="build\sources.props" />

  <!-- Artifacts layout -->
  <PropertyGroup>
    <ArtifactsDir>$(MSBuildThisFileDirectory)artifacts\</ArtifactsDir>
    <ArtifactsObjDir>$(ArtifactsDir)obj\</ArtifactsObjDir>
    <ArtifactsBinDir>$(ArtifactsDir)bin\</ArtifactsBinDir>
    <ArtifactsConfigurationDir>$(ArtifactsDir)$(Configuration)\</ArtifactsConfigurationDir>
    <ArtifactsPackagesDir>$(ArtifactsDir)packages\$(Configuration)\</ArtifactsPackagesDir>
    <ArtifactsShippingPackagesDir>$(ArtifactsPackagesDir)Shipping\</ArtifactsShippingPackagesDir>
    <ArtifactsNonShippingPackagesDir>$(ArtifactsPackagesDir)NonShipping\</ArtifactsNonShippingPackagesDir>
    <InstallersOutputPath>$(ArtifactsDir)installers\$(Configuration)\</InstallersOutputPath>
    <VisualStudioSetupOutputPath>$(ArtifactsDir)VSSetup\$(Configuration)\</VisualStudioSetupOutputPath>
  </PropertyGroup>

  <!-- Ensure these output paths exist. -->
  <ItemGroup>
    <CreateDirectory Include="$(ArtifactsShippingPackagesDir)" />
    <CreateDirectory Include="$(ArtifactsNonShippingPackagesDir)" />
    <CreateDirectory Include="$(InstallersOutputPath)" />
    <CreateDirectory Include="$(VisualStudioSetupOutputPath)" />
  </ItemGroup>

  <PropertyGroup Condition=" '$(OutputInRepoRoot)' == 'true' ">
    <OutDirName Condition=" '$(OutDirName)' == '' ">$(MSBuildProjectName)</OutDirName>

    <BaseOutputPath Condition=" '$(BaseOutputPath)' == '' ">$([System.IO.Path]::GetFullPath('$(ArtifactsBinDir)$(OutDirName)\'))</BaseOutputPath>
    <OutputPath Condition=" '$(PlatformName)' == 'AnyCPU' ">$(BaseOutputPath)$(Configuration)\</OutputPath>
    <OutputPath Condition=" '$(PlatformName)' != 'AnyCPU' ">$(BaseOutputPath)$(PlatformName)\$(Configuration)\</OutputPath>

    <BaseIntermediateOutputPath Condition=" '$(BaseIntermediateOutputPath)' == '' ">$([System.IO.Path]::GetFullPath('$(ArtifactsObjDir)$(OutDirName)\'))</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition=" '$(PlatformName)' == 'AnyCPU' ">$(BaseIntermediateOutputPath)$(Configuration)\</IntermediateOutputPath>
    <IntermediateOutputPath Condition=" '$(PlatformName)' != 'AnyCPU' ">$(BaseIntermediateOutputPath)$(PlatformName)\$(Configuration)\</IntermediateOutputPath>
  </PropertyGroup>

  <!-- The location of the local installation of the .NET Core shared framework. -->
  <PropertyGroup>
    <LocalDotNetRoot Condition="'$(TargetOSName)' == 'win'">$(RepositoryRoot).dotnet\$(TargetArchitecture)\</LocalDotNetRoot>
    <LocalDotNetRoot Condition="'$(TargetOSName)' != 'win'">$(RepositoryRoot).dotnet\</LocalDotNetRoot>
    <!-- Override the SDK default and point to local .dotnet folder. -->
    <NetCoreTargetingPackRoot>$(LocalDotNetRoot)packs\</NetCoreTargetingPackRoot>
  </PropertyGroup>

  <!-- Defines project type conventions. -->
  <PropertyGroup>
    <RepoRelativeProjectDir>$([MSBuild]::MakeRelative($(RepositoryRoot), $(MSBuildProjectDirectory)))</RepoRelativeProjectDir>

    <IsBenchmarkProject Condition="$(MSBuildProjectName.EndsWith('.Performance')) OR $(RepoRelativeProjectDir.Contains('perf'))">true</IsBenchmarkProject>
    <IsTestProject Condition="$(MSBuildProjectName.EndsWith('Tests')) OR $(MSBuildProjectName.EndsWith('.Test'))">true</IsTestProject>
    <IsTestAssetProject Condition="$(RepoRelativeProjectDir.Contains('testassets'))">true</IsTestAssetProject>
    <IsSampleProject Condition="$(RepoRelativeProjectDir.Contains('sample'))">true</IsSampleProject>
    <IsAnalyzersProject Condition="$(MSBuildProjectName.EndsWith('.Analyzers'))">true</IsAnalyzersProject>
    <IsSpecificationTestProject Condition="$(MSBuildProjectName.EndsWith('.Specification.Tests'))">true</IsSpecificationTestProject>

  </PropertyGroup>

  <Import Project="build\tasks\RepoTasks.tasks" Condition="'$(MSBuildProjectName)' != 'RepoTasks' AND '$(DesignTimeBuild)' != 'true'" />

  <PropertyGroup>
    <ContinuousIntegrationBuild Condition="'$(CI)' == 'true'">true</ContinuousIntegrationBuild>
    <!--
      Disable deterministic source paths in test assets and samples.
      In order for the debugger to find source files when debugging a locally built binary the PDB must contain original, unmapped local paths
    -->
    <DeterministicSourcePaths Condition="'$(IsSampleProject)' == 'true' OR '$(IsTestAssetProject)' == 'true'">false</DeterministicSourcePaths>
    <!-- Projects which reference Microsoft.AspNetCore.Mvc.Testing should import this targets file to ensure dependency .deps.json files are copied into test output. -->
    <MvcTestingTargets>$(MSBuildThisFileDirectory)src\Mvc\Mvc.Testing\src\Microsoft.AspNetCore.Mvc.Testing.targets</MvcTestingTargets>
    <!-- IIS native projects can only be built on Windows for x86 and x64. -->
    <BuildIisNativeProjects Condition="'$(BuildNative)' != 'false' AND '$(TargetOsName)' == 'win' AND ('$(TargetArchitecture)' == 'x86' OR '$(TargetArchitecture)' == 'x64')">true</BuildIisNativeProjects>
    <!-- This property is shared by several projects to layout the AspNetCore.App targeting pack for installers -->
    <TargetingPackLayoutRoot>$(ArtifactsObjDir)TargetingPack.Layout\$(Configuration)\</TargetingPackLayoutRoot>
    <!-- This property is shared by several projects to layout the AspNetCore.App shared framework for installers -->
    <SharedFrameworkLayoutRoot>$(ArtifactsObjDir)SharedFx.Layout\$(Configuration)\$(TargetRuntimeIdentifier)\</SharedFrameworkLayoutRoot>
    <!-- This property points to a folder which includes both Microsoft.NETCore.App and AspNetCore.App. -->
    <RedistSharedFrameworkLayoutRoot>$(ArtifactsObjDir)RedistSharedFx.Layout\$(Configuration)\$(TargetRuntimeIdentifier)\</RedistSharedFrameworkLayoutRoot>

    <ArchiveExtension>.tar.gz</ArchiveExtension>
    <ArchiveExtension Condition="'$(TargetOsName)' == 'win'">.zip</ArchiveExtension>
  </PropertyGroup>

  <Import Project="eng\Workarounds.props" />
  <Import Project="eng\Dependencies.props" />
  <Import Project="eng\PatchConfig.props" />
  <Import Project="eng\ProjectReferences.props" />
  <Import Project="eng\SharedFramework.Local.props" />
  <Import Project="eng\SharedFramework.External.props" />
  <Import Project="eng\targets\Cpp.Common.props"  Condition="'$(MSBuildProjectExtension)' == '.vcxproj'" />
  <Import Project="eng\targets\CSharp.Common.props"  Condition="'$(MSBuildProjectExtension)' == '.csproj'" />
  <Import Project="eng\targets\Wix.Common.props"  Condition="'$(MSBuildProjectExtension)' == '.wixproj'" />
  <Import Project="eng\targets\Npm.Common.props"  Condition="'$(MSBuildProjectExtension)' == '.npmproj'" />

</Project>
