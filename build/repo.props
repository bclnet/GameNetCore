<Project>
  <PropertyGroup>
    <TargetRuntimeIdentifier Condition="'$(TargetRuntimeIdentifier)' == ''">$(TargetOsName)-$(TargetArchitecture)</TargetRuntimeIdentifier>
  </PropertyGroup>

  <PropertyGroup>
    <!-- This repo does not have solutions to build -->
    <DisableDefaultTargets>true</DisableDefaultTargets>
    <DisableDefaultItems>true</DisableDefaultItems>
    <BuildSolutions>false</BuildSolutions>
    <BuildSiteExtensions Condition="'$(TargetRuntimeIdentifier)' == 'win-x64' OR '$(TargetRuntimeIdentifier)' == 'win-x86'">true</BuildSiteExtensions>

    <OverridePackageOutputPath>false</OverridePackageOutputPath>

    <IsFinalBuild Condition="'$(IsFinalBuild)' == ''">false</IsFinalBuild>

    <ArtifactsPackagesDir>$(ArtifactsDir)packages\$(Configuration)\</ArtifactsPackagesDir>
    <ArtifactsShippingPackagesDir>$(ArtifactsPackagesDir)Shipping\</ArtifactsShippingPackagesDir>
    <ArtifactsNonShippingPackagesDir>$(ArtifactsPackagesDir)NonShipping\</ArtifactsNonShippingPackagesDir>
    <InstallersOutputPath>$(ArtifactsDir)installers\$(Configuration)\</InstallersOutputPath>
    <VisualStudioSetupOutputPath>$(ArtifactsDir)VSSetup\$(Configuration)\</VisualStudioSetupOutputPath>

    <SignCheckExclusionsFile>$(RepositoryRoot)eng\signcheck.exclusions.txt</SignCheckExclusionsFile>

    <!-- Disable the check which asserts that all managed .NET binaries we distribute are strong-named signed. Workaround for https://github.com/aspnet/AspNetCore-Internal/issues/1501 -->
    <DisableSignCheckStrongName>true</DisableSignCheckStrongName>

    <SharedSourcesFolder>$(RepositoryRoot)src\Shared\</SharedSourcesFolder>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(BuildAllProjects)' == 'true' ">
    <BuildNative>true</BuildNative>
    <BuildManaged>true</BuildManaged>
    <BuildNodeJS>true</BuildNodeJS>
    <BuildJava>true</BuildJava>
  </PropertyGroup>

  <!-- These projects are always excluded, even when -projects is specified on command line. -->
  <ItemGroup>

    <!-- These projects use 'legacy' csproj, which is not supported by dotnet-msbuild. -->
    <ProjectToExclude Include="
                      $(RepositoryRoot)src\Servers\HttpSys\samples\TestClient\TestClient.csproj;
                      $(RepositoryRoot)src\Middleware\GameSockets\samples\TestServer\TestServer.csproj;
                      "
                      Condition=" '$(MSBuildRuntimeType)' == 'Core' " />

    <!-- Exclude the websockets samples for now because they use classic .csproj, which is not yet supported in our build. -->
    <ProjectToExclude Include="$(RepositoryRoot)src\Middleware\GameSockets\samples\**\*.csproj" />

    <!-- These projects are meant to be executed by tests. -->
    <ProjectToExclude Include="
                      $(RepositoryRoot)src\Tools\dotnet-watch\test\TestProjects\**\*.csproj;
                      $(RepositoryRoot)src\submodules\**\*.*proj;
                      $(RepositoryRoot)src\Installers\**\*.*proj;
                      $(RepositoryRoot)src\ProjectTemplates\Game.ProjectTemplates\content\**\*.csproj;
                      " />

    <!-- Exclude the benchmarks because they use <PackageReference>. -->
    <ProjectToExclude Include="
                      $(RepositoryRoot)src\Mvc\benchmarkapps\**\*.csproj;
                      $(RepositoryRoot)src\Servers\Kestrel\perf\PlatformBenchmarks\**\*.csproj;
                      " />


    <!-- Exclude the ones I am woring on. -->
    <ProjectToExclude Include="
$(RepositoryRoot)src\DefaultBuilder\samples\SampleApp\SampleApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\DependencyInjectionApp\DependencyInjectionApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\ref\Contoso.GameNetCore.csproj;
$(RepositoryRoot)src\DefaultBuilder\samples\SampleApp\SampleApp.csproj;
$(RepositoryRoot)_src\DefaultBuilder\src\Contoso.GameNetCore.csproj;
$(RepositoryRoot)src\DefaultBuilder\test\Contoso.GameNetCore.FunctionalTests\Contoso.GameNetCore.FunctionalTests.csproj;
$(RepositoryRoot)src\DefaultBuilder\test\Contoso.GameNetCore.Tests\Contoso.GameNetCore.Tests.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\CreateDefaultBuilderApp\CreateDefaultBuilderApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\CreateDefaultBuilderOfTApp\CreateDefaultBuilderOfTApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\DependencyInjectionApp\DependencyInjectionApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\StartRequestDelegateUrlApp\StartRequestDelegateUrlApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\StartRouteBuilderUrlApp\StartRouteBuilderUrlApp.csproj;
$(RepositoryRoot)src\DefaultBuilder\testassets\StartWithIApplicationBuilderUrlApp\StartWithIApplicationBuilderUrlApp.csproj;
$(RepositoryRoot)src\Framework\ref\Contoso.GameNetCore.App.Ref.csproj;
$(RepositoryRoot)_src\Framework\src\Contoso.GameNetCore.App.Runtime.csproj;
$(RepositoryRoot)src\Framework\test\Contoso.GameNetCore.App.UnitTests.csproj;
$(RepositoryRoot)src\Hosting\Abstractions\ref\Contoso.GameNetCore.Hosting.Abstractions.csproj;
$(RepositoryRoot)_src\Hosting\Abstractions\src\Contoso.GameNetCore.Hosting.Abstractions.csproj;
$(RepositoryRoot)src\Hosting\Hosting\ref\Contoso.GameNetCore.Hosting.csproj;
$(RepositoryRoot)_src\Hosting\Hosting\src\Contoso.GameNetCore.Hosting.csproj;
$(RepositoryRoot)src\Hosting\Hosting\test\Contoso.GameNetCore.Hosting.Tests.csproj;
$(RepositoryRoot)src\Hosting\samples\GenericGameHost\GenericGameHost.csproj;
$(RepositoryRoot)src\Hosting\samples\SampleStartups\SampleStartups.csproj;
$(RepositoryRoot)src\Hosting\Server.Abstractions\ref\Contoso.GameNetCore.Hosting.Server.Abstractions.csproj;
$(RepositoryRoot)_src\Hosting\Server.Abstractions\src\Contoso.GameNetCore.Hosting.Server.Abstractions.csproj;
$(RepositoryRoot)src\Hosting\Server.IntegrationTesting\ref\Contoso.GameNetCore.Server.IntegrationTesting.csproj;
$(RepositoryRoot)src\Hosting\Server.IntegrationTesting\src\Contoso.GameNetCore.Server.IntegrationTesting.csproj;
$(RepositoryRoot)src\Hosting\test\FunctionalTests\Contoso.GameNetCore.Hosting.FunctionalTests.csproj;
$(RepositoryRoot)src\Hosting\test\testassets\Contoso.GameNetCore.Hosting.TestSites\Contoso.GameNetCore.Hosting.TestSites.csproj;
$(RepositoryRoot)src\Hosting\test\testassets\IStartupInjectionAssemblyName\IStartupInjectionAssemblyName.csproj;
$(RepositoryRoot)src\Hosting\test\testassets\TestStartupAssembly1\TestStartupAssembly1.csproj;
$(RepositoryRoot)src\Hosting\TestHost\ref\Contoso.GameNetCore.TestHost.csproj;
$(RepositoryRoot)src\Hosting\TestHost\src\Contoso.GameNetCore.TestHost.csproj;
$(RepositoryRoot)src\Hosting\TestHost\test\Contoso.GameNetCore.TestHost.Tests.csproj;
$(RepositoryRoot)src\Hosting\WindowsServices\ref\Contoso.GameNetCore.Hosting.WindowsServices.csproj;
$(RepositoryRoot)_src\Hosting\WindowsServices\src\Contoso.GameNetCore.Hosting.WindowsServices.csproj;
$(RepositoryRoot)src\Hosting\WindowsServices\test\Contoso.GameNetCore.Hosting.WindowsServices.Tests.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\ref\Contoso.GameNetCore.Diagnostics.csproj;
$(RepositoryRoot)_src\Middleware\Diagnostics\src\Contoso.GameNetCore.Diagnostics.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\FunctionalTests\Diagnostics.FunctionalTests.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\testassets\ClassLibraryWithPortablePdbs\ClassLibraryWithPortablePdbs.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\testassets\DeveloperExceptionPageSample\DeveloperExceptionPageSample.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\testassets\ExceptionHandlerSample\ExceptionHandlerSample.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\testassets\StatusCodePagesSample\StatusCodePagesSample.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\testassets\WelcomePageSample\WelcomePageSample.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics\test\UnitTests\Contoso.GameNetCore.Diagnostics.Tests.csproj;
$(RepositoryRoot)src\Middleware\Diagnostics.Abstractions\ref\Contoso.GameNetCore.Diagnostics.Abstractions.csproj;
$(RepositoryRoot)_src\Middleware\Diagnostics.Abstractions\src\Contoso.GameNetCore.Diagnostics.Abstractions.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\ref\Contoso.GameNetCore.GameSockets.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\samples\EchoApp\EchoApp.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\samples\TestServer\TestServer.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\src\Contoso.GameNetCore.GameSockets.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\test\ConformanceTests\AutobahnTestApp\AutobahnTestApp.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\test\ConformanceTests\Contoso.GameNetCore.GameSockets.ConformanceTests.csproj;
$(RepositoryRoot)src\Middleware\GameSockets\test\UnitTests\Contoso.GameNetCore.GameSockets.Tests.csproj;
$(RepositoryRoot)src\Middleware\HeaderPropagation\ref\Contoso.GameNetCore.HeaderPropagation.csproj;
$(RepositoryRoot)src\Middleware\HeaderPropagation\src\Contoso.GameNetCore.HeaderPropagation.csproj;
$(RepositoryRoot)src\Middleware\HeaderPropagation\test\Contoso.GameNetCore.HeaderPropagation.Tests.csproj;
$(RepositoryRoot)src\Middleware\HealthChecks\ref\Contoso.GameNetCore.Diagnostics.HealthChecks.csproj;
$(RepositoryRoot)src\Middleware\HealthChecks\src\Contoso.GameNetCore.Diagnostics.HealthChecks.csproj;
$(RepositoryRoot)src\Middleware\HealthChecks\test\testassets\HealthChecksSample\HealthChecksSample.csproj;
$(RepositoryRoot)src\Middleware\HealthChecks\test\UnitTests\Contoso.GameNetCore.Diagnostics.HealthChecks.Tests.csproj;
$(RepositoryRoot)src\Middleware\HostFiltering\ref\Contoso.GameNetCore.HostFiltering.csproj;
$(RepositoryRoot)src\Middleware\HostFiltering\sample\HostFilteringSample.csproj;
$(RepositoryRoot)_src\Middleware\HostFiltering\src\Contoso.GameNetCore.HostFiltering.csproj;
$(RepositoryRoot)src\Middleware\HostFiltering\test\Contoso.GameNetCore.HostFiltering.Tests.csproj;
$(RepositoryRoot)src\Middleware\Localization\ref\Contoso.GameNetCore.Localization.csproj;
$(RepositoryRoot)src\Middleware\Localization\sample\LocalizationSample.csproj;
$(RepositoryRoot)src\Middleware\Localization\src\Contoso.GameNetCore.Localization.csproj;
$(RepositoryRoot)src\Middleware\Localization\test\FunctionalTests\Contoso.GameNetCore.Localization.FunctionalTests.csproj;
$(RepositoryRoot)src\Middleware\Localization\test\UnitTests\Contoso.GameNetCore.Localization.Tests.csproj;
$(RepositoryRoot)src\Middleware\Localization\testassets\LocalizationWebsite\LocalizationWebsite.csproj;
$(RepositoryRoot)src\Middleware\Localization\testassets\ResourcesClassLibraryNoAttribute\ResourcesClassLibraryNoAttribute.csproj;
$(RepositoryRoot)src\Middleware\Localization\testassets\ResourcesClassLibraryWithAttribute\ResourcesClassLibraryWithAttribute.csproj;
$(RepositoryRoot)src\Middleware\Localization.Routing\ref\Contoso.GameNetCore.Localization.Routing.csproj;
$(RepositoryRoot)src\Middleware\Localization.Routing\src\Contoso.GameNetCore.Localization.Routing.csproj;
$(RepositoryRoot)src\Middleware\Localization.Routing\test\Contoso.GameNetCore.Localization.Routing.Tests.csproj;
$(RepositoryRoot)src\Middleware\MiddlewareAnalysis\ref\Contoso.GameNetCore.MiddlewareAnalysis.csproj;
$(RepositoryRoot)src\Middleware\MiddlewareAnalysis\samples\MiddlewareAnalysisSample\MiddlewareAnalysisSample.csproj;
$(RepositoryRoot)src\Middleware\MiddlewareAnalysis\src\Contoso.GameNetCore.MiddlewareAnalysis.csproj;
$(RepositoryRoot)src\Middleware\MiddlewareAnalysis\test\Contoso.GameNetCore.MiddlewareAnalysis.Tests.csproj;
$(RepositoryRoot)src\Middleware\NodeServices\ref\Contoso.GameNetCore.NodeServices.csproj;
$(RepositoryRoot)src\Middleware\NodeServices\samples\NodeServicesExamples\NodeServicesExamples.csproj;
$(RepositoryRoot)src\Middleware\NodeServices\src\Contoso.GameNetCore.NodeServices.csproj;
$(RepositoryRoot)src\Middleware\NodeServices\test\Contoso.GameNetCore.NodeServices.Tests.csproj;
$(RepositoryRoot)src\Middleware\ProtoOverrides\ref\Contoso.GameNetCore.ProtoOverrides.csproj;
$(RepositoryRoot)src\Middleware\ProtoOverrides\sample\ProtoOverridesSample.csproj;
$(RepositoryRoot)src\Middleware\ProtoOverrides\src\Contoso.GameNetCore.ProtoOverrides.csproj;
$(RepositoryRoot)src\Middleware\ProtoOverrides\test\Contoso.GameNetCore.ProtoOverrides.Tests.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching\ref\Contoso.GameNetCore.ResponseCaching.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching\samples\ResponseCachingSample\ResponseCachingSample.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching\src\Contoso.GameNetCore.ResponseCaching.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching\test\Contoso.GameNetCore.ResponseCaching.Tests.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching.Abstractions\ref\Contoso.GameNetCore.ResponseCaching.Abstractions.csproj;
$(RepositoryRoot)src\Middleware\ResponseCaching.Abstractions\src\Contoso.GameNetCore.ResponseCaching.Abstractions.csproj;
$(RepositoryRoot)src\Middleware\ResponseCompression\perf\Contoso.GameNetCore.ResponseCompression.Performance.csproj;
$(RepositoryRoot)src\Middleware\ResponseCompression\ref\Contoso.GameNetCore.ResponseCompression.csproj;
$(RepositoryRoot)src\Middleware\ResponseCompression\sample\ResponseCompressionSample.csproj;
$(RepositoryRoot)src\Middleware\ResponseCompression\src\Contoso.GameNetCore.ResponseCompression.csproj;
$(RepositoryRoot)src\Middleware\ResponseCompression\test\Contoso.GameNetCore.ResponseCompression.Tests.csproj;
$(RepositoryRoot)src\Middleware\Rewrite\ref\Contoso.GameNetCore.Rewrite.csproj;
$(RepositoryRoot)src\Middleware\Rewrite\sample\RewriteSample.csproj;
$(RepositoryRoot)src\Middleware\Rewrite\src\Contoso.GameNetCore.Rewrite.csproj;
$(RepositoryRoot)src\Middleware\Rewrite\test\Contoso.GameNetCore.Rewrite.Tests.csproj;
$(RepositoryRoot)src\Middleware\Session\ref\Contoso.GameNetCore.Session.csproj;
$(RepositoryRoot)src\Middleware\Session\samples\SessionSample.csproj;
$(RepositoryRoot)src\Middleware\Session\src\Contoso.GameNetCore.Session.csproj;
$(RepositoryRoot)src\Middleware\Session\test\Contoso.GameNetCore.Session.Tests.csproj;
$(RepositoryRoot)src\Middleware\StaticFiles\ref\Contoso.GameNetCore.StaticFiles.csproj;
$(RepositoryRoot)src\Middleware\StaticFiles\samples\StaticFileSample\StaticFileSample.csproj;
$(RepositoryRoot)src\Middleware\StaticFiles\src\Contoso.GameNetCore.StaticFiles.csproj;
$(RepositoryRoot)src\Middleware\StaticFiles\test\FunctionalTests\Contoso.GameNetCore.StaticFiles.FunctionalTests.csproj;
$(RepositoryRoot)src\Middleware\StaticFiles\test\UnitTests\Contoso.GameNetCore.StaticFiles.Tests.csproj;
$(RepositoryRoot)src\Proto\Authentication.Abstractions\ref\Contoso.GameNetCore.Authentication.Abstractions.csproj;
$(RepositoryRoot)src\Proto\Authentication.Abstractions\src\Contoso.GameNetCore.Authentication.Abstractions.csproj;
$(RepositoryRoot)src\Proto\Authentication.Core\ref\Contoso.GameNetCore.Authentication.Core.csproj;
$(RepositoryRoot)src\Proto\Authentication.Core\src\Contoso.GameNetCore.Authentication.Core.csproj;
$(RepositoryRoot)src\Proto\Authentication.Core\test\Contoso.GameNetCore.Authentication.Core.Test.csproj;
$(RepositoryRoot)src\Proto\GameUtilities\perf\Contoso.GameNetCore.GameUtilities.Performance\Contoso.GameNetCore.GameUtilities.Performance.csproj;
$(RepositoryRoot)src\Proto\GameUtilities\ref\Contoso.GameNetCore.GameUtilities.csproj;
$(RepositoryRoot)_src\Proto\GameUtilities\src\Contoso.GameNetCore.GameUtilities.csproj;
$(RepositoryRoot)src\Proto\GameUtilities\test\Contoso.GameNetCore.GameUtilities.Tests.csproj;
$(RepositoryRoot)src\Proto\Headers\ref\Contoso.Net.Proto.Headers.csproj;
$(RepositoryRoot)_src\Proto\Headers\src\Contoso.Net.Proto.Headers.csproj;
$(RepositoryRoot)src\Proto\Headers\test\Contoso.Net.Proto.Headers.Tests.csproj;
$(RepositoryRoot)src\Proto\Owin\ref\Contoso.GameNetCore.Owin.csproj;
$(RepositoryRoot)src\Proto\Owin\src\Contoso.GameNetCore.Owin.csproj;
$(RepositoryRoot)src\Proto\Owin\test\Contoso.GameNetCore.Owin.Tests.csproj;
$(RepositoryRoot)src\Proto\perf\Microbenchmarks\Contoso.GameNetCore.Proto.Microbenchmarks.csproj;
$(RepositoryRoot)src\Proto\Proto\perf\Contoso.GameNetCore.Proto.Performance.csproj;
$(RepositoryRoot)src\Proto\Proto\ref\Contoso.GameNetCore.Proto.csproj;
$(RepositoryRoot)_src\Proto\Proto\src\Contoso.GameNetCore.Proto.csproj;
$(RepositoryRoot)src\Proto\Proto\test\Contoso.GameNetCore.Proto.Tests.csproj;
$(RepositoryRoot)src\Proto\Proto.Abstractions\ref\Contoso.GameNetCore.Proto.Abstractions.csproj;
$(RepositoryRoot)_src\Proto\Proto.Abstractions\src\Contoso.GameNetCore.Proto.Abstractions.csproj;
$(RepositoryRoot)src\Proto\Proto.Abstractions\test\Contoso.GameNetCore.Proto.Abstractions.Tests.csproj;
$(RepositoryRoot)src\Proto\Proto.Extensions\ref\Contoso.GameNetCore.Proto.Extensions.csproj;
$(RepositoryRoot)_src\Proto\Proto.Extensions\src\Contoso.GameNetCore.Proto.Extensions.csproj;
$(RepositoryRoot)src\Proto\Proto.Extensions\test\Contoso.GameNetCore.Proto.Extensions.Tests.csproj;
$(RepositoryRoot)src\Proto\Proto.Features\ref\Contoso.GameNetCore.Proto.Features.csproj;
$(RepositoryRoot)_src\Proto\Proto.Features\src\Contoso.GameNetCore.Proto.Features.csproj;
$(RepositoryRoot)src\Proto\Proto.Features\test\Contoso.GameNetCore.Proto.Features.Tests.csproj;
$(RepositoryRoot)src\Proto\Routing\perf\Contoso.GameNetCore.Routing.Performance.csproj;
$(RepositoryRoot)src\Proto\Routing\ref\Contoso.GameNetCore.Routing.csproj;
$(RepositoryRoot)_src\Proto\Routing\src\Contoso.GameNetCore.Routing.csproj;
$(RepositoryRoot)src\Proto\Routing\test\FunctionalTests\Contoso.GameNetCore.Routing.FunctionalTests.csproj;
$(RepositoryRoot)src\Proto\Routing\test\testassets\Benchmarks\Benchmarks.csproj;
$(RepositoryRoot)src\Proto\Routing\test\testassets\RoutingSandbox\RoutingSandbox.csproj;
$(RepositoryRoot)src\Proto\Routing\test\testassets\RoutingWebSite\RoutingWebSite.csproj;
$(RepositoryRoot)src\Proto\Routing\test\UnitTests\Contoso.GameNetCore.Routing.Tests.csproj;
$(RepositoryRoot)src\Proto\Routing\tools\Swaggatherer\Swaggatherer.csproj;
$(RepositoryRoot)src\Proto\Routing.Abstractions\ref\Contoso.GameNetCore.Routing.Abstractions.csproj;
$(RepositoryRoot)_src\Proto\Routing.Abstractions\src\Contoso.GameNetCore.Routing.Abstractions.csproj;
$(RepositoryRoot)src\Proto\samples\SampleApp\SampleApp.csproj;
$(RepositoryRoot)src\Servers\Connections.Abstractions\ref\Contoso.GameNetCore.Connections.Abstractions.csproj;
$(RepositoryRoot)_src\Servers\Connections.Abstractions\src\Contoso.GameNetCore.Connections.Abstractions.csproj;
$(RepositoryRoot)src\Servers\HttpSys\ref\Contoso.GameNetCore.Server.HttpSys.csproj;
$(RepositoryRoot)src\Servers\HttpSys\samples\HotAddSample\HotAddSample.csproj;
$(RepositoryRoot)src\Servers\HttpSys\samples\SelfHostServer\SelfHostServer.csproj;
$(RepositoryRoot)src\Servers\HttpSys\samples\TestClient\TestClient.csproj;
$(RepositoryRoot)src\Servers\HttpSys\src\Contoso.GameNetCore.Server.HttpSys.csproj;
$(RepositoryRoot)src\Servers\HttpSys\test\FunctionalTests\Contoso.GameNetCore.Server.HttpSys.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\HttpSys\test\Tests\Contoso.GameNetCore.Server.HttpSys.Tests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Core\ref\Contoso.GameNetCore.Server.Kestrel.Core.csproj;
$(RepositoryRoot)_src\Servers\Kestrel\Core\src\Contoso.GameNetCore.Server.Kestrel.Core.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Core\test\Contoso.GameNetCore.Server.Kestrel.Core.Tests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Kestrel\ref\Contoso.GameNetCore.Server.Kestrel.csproj;
$(RepositoryRoot)_src\Servers\Kestrel\Kestrel\src\Contoso.GameNetCore.Server.Kestrel.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Kestrel\test\Contoso.GameNetCore.Server.Kestrel.Tests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\perf\Kestrel.Performance\Contoso.GameNetCore.Server.Kestrel.Performance.csproj;
$(RepositoryRoot)src\Servers\Kestrel\perf\PlatformBenchmarks\PlatformBenchmarks.csproj;
$(RepositoryRoot)src\Servers\Kestrel\samples\LargeResponseApp\LargeResponseApp.csproj;
$(RepositoryRoot)src\Servers\Kestrel\samples\PlaintextApp\PlaintextApp.csproj;
$(RepositoryRoot)src\Servers\Kestrel\samples\Proto2SampleApp\Proto2SampleApp.csproj;
$(RepositoryRoot)src\Servers\Kestrel\samples\SampleApp\SampleApp.csproj;
$(RepositoryRoot)src\Servers\Kestrel\samples\SystemdTestApp\SystemdTestApp.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\InMemory.FunctionalTests\InMemory.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\Interop.FunctionalTests\Interop.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\Libuv.BindTests\Libuv.BindTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\Libuv.FunctionalTests\Libuv.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\Sockets.BindTests\Sockets.BindTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\test\Sockets.FunctionalTests\Sockets.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\tools\CodeGenerator\CodeGenerator.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Transport.Abstractions\ref\Contoso.GameNetCore.Server.Kestrel.Transport.Abstractions.csproj;
$(RepositoryRoot)_src\Servers\Kestrel\Transport.Abstractions\src\Contoso.GameNetCore.Server.Kestrel.Transport.Abstractions.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Transport.Libuv\ref\Contoso.GameNetCore.Server.Kestrel.Transport.Libuv.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Transport.Libuv\src\Contoso.GameNetCore.Server.Kestrel.Transport.Libuv.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Transport.Libuv\test\Contoso.GameNetCore.Server.Kestrel.Transport.Libuv.Tests.csproj;
$(RepositoryRoot)src\Servers\Kestrel\Transport.Sockets\ref\Contoso.GameNetCore.Server.Kestrel.Transport.Sockets.csproj;
$(RepositoryRoot)_src\Servers\Kestrel\Transport.Sockets\src\Contoso.GameNetCore.Server.Kestrel.Transport.Sockets.csproj;
$(RepositoryRoot)src\Servers\test\FunctionalTests\ServerComparison.FunctionalTests.csproj;
$(RepositoryRoot)src\Servers\testassets\ServerComparison.TestSites\ServerComparison.TestSites.csproj;
$(RepositoryRoot)src\Shared\test\Shared.Tests\Contoso.GameNetCore.Shared.Tests.csproj;
$(RepositoryRoot)src\Shared\test\testassets\ThrowingLibrary\ThrowingLibrary.csproj;
         " />

  </ItemGroup>

  <Choose>
    <!-- Project selection can be overridden on the command line by passing in -projects -->
    <When Condition="'$(Projects)' != ''">
      <ItemGroup>
        <ProjectToBuild Include="$(Projects)" Exclude="@(ProjectToExclude);$(RepositoryRoot)**\bin\**\*;$(RepositoryRoot)**\obj\**\*">
          <RestoreInParallel Condition="'%(Extension)' == '.npmproj'">false</RestoreInParallel>
        </ProjectToBuild>
      </ItemGroup>
    </When>
    <Otherwise>

      <ItemGroup>
        <ProjectToBuild Include="$(RepositoryRoot)src\Servers\**\*.pkgproj" Condition=" '$(_RunPack)' == 'true' OR '$(BuildAllProjects)' == 'true' "/>

        <NativeProjects Condition=" '$(TargetOsName)' == 'win' AND ('$(TargetArchitecture)' == 'x86' OR '$(TargetArchitecture)' == 'x64') "
                        Include="$(RepositoryRoot)src\**\*.vcxproj" Exclude="@(ProjectToExclude)">
          <!-- Required to prevent triggering double-builds. See src\Servers\IIS\ResolveIisReferences.targets for details. -->
          <AdditionalProperties Condition="'$(TargetArchitecture)' == 'x64'">Platform=x64</AdditionalProperties>
          <AdditionalProperties Condition="'$(TargetArchitecture)' == 'x86'">Platform=Win32</AdditionalProperties>
        </NativeProjects>

        <ProjectToBuild Condition=" '$(BuildNative)' == 'true'" Include="@(NativeProjects)" Exclude="@(ProjectToExclude)" />
        <ProjectToExclude Condition=" '$(BuildNative)' != 'true'" Include="@(NativeProjects)" />

        <NodeJsProjects Include="
                          $(RepositoryRoot)src\Middleware\**\*.npmproj;
                          "
                        RestoreInParallel="false"
                        Exclude="@(ProjectToExclude)" />

        <ProjectToBuild Condition=" '$(BuildNodeJS)' == 'true'" Include="@(NodeJsProjects)" Exclude="@(ProjectToExclude)" />
        <ProjectToExclude Condition=" '$(BuildNodeJS)' != 'true'" Include="@(NodeJsProjects)" />

        <!--
          Use caution to avoid deep recursion. If the globbing pattern picks up something which exceeds MAX_PATH,
          the entire pattern will silently fail to evaluate correctly.
        -->
        <DotNetProjects Include="
                          $(RepositoryRoot)src\Framework\ref\Contoso.GameNetCore.App.Ref.csproj;
                          $(RepositoryRoot)src\Framework\src\Contoso.GameNetCore.App.Runtime.csproj;
                          $(RepositoryRoot)src\Framework\test\Contoso.GameNetCore.App.UnitTests.csproj;
                          $(RepositoryRoot)src\DefaultBuilder\**\*.*proj;
                          $(RepositoryRoot)src\Hosting\**\*.*proj;
                          $(RepositoryRoot)src\Proto\**\*.*proj;
                          $(RepositoryRoot)src\Servers\**\*.csproj;
                          $(RepositoryRoot)src\Security\**\*.*proj;
                          $(RepositoryRoot)src\Shared\**\*.*proj;
                          $(RepositoryRoot)src\Tools\**\*.*proj;
                          $(RepositoryRoot)src\Middleware\**\*.csproj;
                          $(RepositoryRoot)src\ProjectTemplates\*\*.csproj;
                          $(RepositoryRoot)src\ProjectTemplates\testassets\*\*.csproj;
                          "
                        Exclude="
                          @(ProjectToBuild);
                          @(ProjectToExclude);
                          $(RepositoryRoot)**\node_modules\**\*;
                          $(RepositoryRoot)**\bin\**\*;
                          $(RepositoryRoot)**\obj\**\*;" />

        <ProjectToBuild Condition=" '$(BuildManaged)' == 'true'" Include="@(DotNetProjects)" Exclude="@(ProjectToExclude)" />
        <ProjectToExclude Condition=" '$(BuildManaged)' != 'true'" Include="@(DotNetProjects)" />
      </ItemGroup>
    </Otherwise>
  </Choose>

  <Import Project="..\eng\Versions.props" />
  <Import Project="..\eng\SharedFramework.Local.props" />
  <Import Project="..\eng\SharedFramework.External.props" />
  <Import Project="runtimes.props" />
  <Import Project="CodeSign.props" />
</Project>
